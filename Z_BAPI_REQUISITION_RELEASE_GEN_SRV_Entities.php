
<?php
  /*
    Copyright 2010 Persistent Systems Limited

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
   */

    /**
    * This code was generated by the tool 'PHPDataSvcUtil.php'.
    * Runtime Version:1.0
    *
    * Changes to this file may cause incorrect behavior and will be lost if
    * the code is regenerated.
    */

    require_once 'Context/ObjectContext.php';
    /**
    * Defines default OData Service URL for this proxy class
    */
    define("DEFAULT_ODATA_SERVICE_URL", "http://itelligencechina.vicp.cc:8008/sap/opu/odata/sap/Z_BAPI_REQUISITION_RELEASE_GEN_SRV");
    
   /**
    * Container class Z_BAPI_REQUISITION_RELEASE_GEN_SRV_Entities, Namespace: Z_BAPI_REQUISITION_RELEASE_GEN_SRV
    */
    class Z_BAPI_REQUISITION_RELEASE_GEN_SRV_Entities extends ObjectContext
    {
    
        protected $_numberSet;
        
       /**
        * The constructor for Z_BAPI_REQUISITION_RELEASE_GEN_SRV_Entities accepting service URI
        */
        public function __construct($uri = "")
        {
            if(strlen($uri) == 0)
            {
                $uri = DEFAULT_ODATA_SERVICE_URL;
            }

            if (Utility::reverseFind($uri, '/') != strlen($uri) - 1)
            {
                $uri = $uri . '/';
            }

            $this->_baseURI = $uri;
            parent::__construct($this->_baseURI);
            $this->_entities = array(
                                "numberSet");
            $this->_entitySet2Type = array(
                                            "numberset" => "number");
            $this->_entityType2Set = array(
                                            "number" => "numberSet");

            $this->_association = array();

    
            $this->_numberSet = new DataServiceQuery('/'.'numberSet', $this);

        }

    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset numberSet
         * @return DataServiceQuery
         */
        public function numberSet()
        {
            $this->_numberSet->ClearAllOptions();
            return $this->_numberSet;
        }
    
       /**
        * Functions for adding object to the entityset/collection
        */
    
       /**
        * Add numberSet
        * @param numberSet $object
        */
      public function AddTonumberSet($object)
        {
            return parent::AddObject('numberSet', $object);
        }
    

       /**
        * This function returns the entities.
        */
        public function getEntities()
        {
            return $this->_entities;
        }
    }
  
   /**
    * @class:number
    * @type:EntityType
    * @key:Number
    */
    class number extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:10
        * @FixedLength:
        */
        public $Number;
    

       /**
        * Function to create an instance of number
        * @param Edm.String $Number
        */
        public static function Createnumber(
            $Number)
        {   
            $number = new number();
            $number->Number = $Number;
            return $number;
        }

       /**
        * Constructor for number
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
?>
  